name: Notify Discord on Push

on:
  push:
    branches:
      - '**'

jobs:
  notify_discord:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Send Discord embed for push
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          REPO: ${{ github.repository }}
          BRANCH: ${{ github.ref_name }}
          ACTOR: ${{ github.actor }}
          EVENT_PATH: ${{ github.event_path }}
          SHA: ${{ github.sha }}
        run: |
          TIMESTAMP=$(date +"%d/%m/%Y %H:%M:%S")

          # Parse commits from event payload
          COMMITS_JSON="[]"
          if [ -f "$EVENT_PATH" ]; then
            COMMITS_JSON=$(jq -c '.commits' "$EVENT_PATH")
          fi

          # Build commit lines
          DESCRIPTION=""
          COUNT=$(echo "$COMMITS_JSON" | jq 'length' )
          if [ "$COUNT" -gt 0 ]; then
            for i in $(seq 0 $((COUNT-1))); do
              id=$(echo "$COMMITS_JSON" | jq -r ".[$i].id" | cut -c1-7)
              msg=$(echo "$COMMITS_JSON" | jq -r ".[$i].message" | sed ':a;N;s/\n/\\n/g;ta')
              author=$(echo "$COMMITS_JSON" | jq -r ".[$i].author.name")
              DESCRIPTION="${DESCRIPTION}\nâ€¢ \`${id}\` ${msg} â€” ${author}"
            done
          else
            # fallback
            HEAD_MSG=$(jq -r '.head_commit.message // empty' "$EVENT_PATH" 2>/dev/null || echo "")
            HEAD_AUTHOR=$(jq -r '.head_commit.author.name // empty' "$EVENT_PATH" 2>/dev/null || echo "")
            if [ -n "$HEAD_MSG" ]; then
              DESCRIPTION="â€¢ ${HEAD_MSG} â€” ${HEAD_AUTHOR}"
              COUNT=1
            else
              DESCRIPTION="(No commit details available)"
              COUNT=0
            fi
          fi

          # Prepare embed payload (escape newlines)
          EMBED=$(cat <<EOF
{
  "embeds": [
    {
      "title": "ðŸ“Œ Push detected",
      "description": "**Repo:** ${REPO}\n**Branch:** ${BRANCH}\n**Actor:** ${ACTOR}\n**Time:** ${TIMESTAMP}\n\n**Commits (${COUNT}):**\n${DESCRIPTION}",
      "url": "https://github.com/${REPO}/commit/${SHA}",
      "color": 7506394,
      "footer": {
        "text": "GitHub Actions"
      }
    }
  ]
}
EOF
)

          # Send to Discord
          echo "$EMBED" | jq -c . > /tmp/discord_payload.json
          curl -s -H "Content-Type: application/json" -X POST "${DISCORD_WEBHOOK}" --data-binary @/tmp/discord_payload.json

          echo "Discord message sent."
